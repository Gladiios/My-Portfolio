{   
        "header-h2": "Développeur Web",
        "nav-about": "À propos",
        "nav-project": "Projet",

        "theme-dark": "Sombre",
        "theme-light": "Clair",

        "homeAbout": "Né en 2000\nà Caen, France.\nDe pâtissier à livreur.\nAprès 7 ans de métiers\nque je n'aimais pas\net plusieurs réflexions.\nJ'ai décidé d'apprendre\nle développement web.\nÀ partir de là,\nje me suis inscrit à une\nformation de développeur\nFront-End sur\nOpen Classrooms\nd'une durée de 9 mois.",

        "aboutText": "Salut, je suis Erwan, un Développeur Web. Depuis l'enfance, je passe la plupart\nde mon temps devant un écran, j'aime aussi apprendre, créer et concevoir.\nJ'ai travaillé comme apprenti pâtissier de 2016 à 2018 à la Boulangerie Cherie à Potigny\n et j'ai obtenu un diplôme dans ce domaine mais j'ai immédiatement arrêté car \nje n'étais pas assez passionné pour continuer à travailler dans ce secteur.\nAprès ça, en 2019, j'ai travaillé environ 2 mois comme éboueur, puis j'ai travaillé pendant\n 2 ans comme préparateur de commandes chez Metaluplast, une usine de matériel de sport.\nComme je ne m'épannouissait plus dans mon travail, j'ai quitté Metaluplast et trouvé un emploi comme\nlivreur en juin 2021 pour DPD et Chronopost, je suis devenu chef d'équipe peu après mon\nrecrutement et j'ai géré une équipe de 5 personnes. Vers la fin de 2022, je me suis arrangé\n avec mon employeur et j'ai démissionné, en janvier 2023 mon contrat s'est terminé.\nActuellement, je suis seulement capable de faire du développement front-end,\n mais j'ai l'intention d'apprendre le développement back-end dans un futur proche.\nLes langages et outils avec lesquels je suis familier :",

        "bookiHeader": "Une entreprise qui souhaite développer un site web pour trouver des hébergements et des activités.",
        "bookiFilters": "Booki est un projet web dont le but est de simplifier la recherche d'hébergements et d'activités dans la ville choisie par l'utilisateur.",
        "bookiPopular": "En utilisant uniquement HTML et CSS, le but ici était d'être aussi proche que possible du modèle figma et de rendre le site responsive pour tablette et mobile.",
        "bookiActivities": "Version Mobile.",

        "ohMyFoodIntro": "Une startup de restauration qui veut développer un site web qui liste les menus des restaurants gastronomiques.",
        "ohMyFoodGoal": "OhMyFood est un projet lié à la restauration, qui en plus des systèmes de réservation classiques, permet aux clients de composer le menu de leurs repas afin qu'ils soient prêts à leur arrivée.",
        "ohMyFoodMobile": "Le but était de créer le site en mobile first, en utilisant HTML et Sass, avec quelques animations comme un écran de chargement, un cœur se remplissant au survol ou au clic et une validation de commande déplaçant le prix d'un article du menu.",

        "sophieBluelGoal": "En utilisant un backend déjà créé, j'ai importé dynamiquement avec javascript les projets réalisés par le designer d'intérieur, avec des filtres par catégorie. J'ai également créé la page de connexion en utilisant des Jetons Web JSON avec une redirection sur la page d'accueil lorsque l'administrateur est connecté avec succès. Pour finir, j'ai implémenté une modale sur la page d'accueil, permettant à l'admin de POSTER ou SUPPRIMER un travail.",
        "sophieBluelFilters": "Les filtres fonctionnels.",
        "sophieBluelLogin": "Système d'authentification avec des Jetons Web JSON.",
        "sophieBluelAdmin": "La vue admin lorsque l'utilisateur est connecté.",
        "sophieBluelModal1": "La première fenêtre de la modale, permet à l'utilisateur de supprimer un travail en cliquant sur la poubelle et permet également de naviguer vers la fenêtre d'ajout de travail.",
        "sophieBluelModal2": "Sur la deuxième fenêtre, l'utilisateur peut ajouter un travail en téléchargeant une image de moins de 4mo, il doit également remplir le champ du titre et choisir une catégorie, lorsque ces conditions sont remplies, le bouton de validation change de couleur pour devenir vert.",

        "kasaGoal1": "Kasa est un leader dans la location d'appartements, le but ici était de moderniser le site web existant, en utilisant React avec des composants réutilisables comme on peut le voir avec la bannière qui n'a pas la même image sur différentes pages, et aussi des routes utilisant React Router.",
        "kasaGoal2": "Le composant d'accordéon est également réutilisable.",
        "KasaCarousel": "En cliquant sur une image dans la galerie, une redirection est effectuée, affichant les informations correspondant à l'appartement.\n Un carrousel affiche les photos de l'appartement.",
        "kasaInfo": "Toutes les informations affichées ici sont dynamiques, le nom, les tags, ou encore la notation par étoiles. Le composant d'accordéon est réutilisé ici avec 'Description' et 'Équipements'.",
        "kasaInfoAfter": "Le site est également entièrement responsive.",

        "ninaCarducciGallery": "Nina Carducci est un site portfolio d'une photographe professionnelle spécialisée dans la photographie de portrait et d'événements.\n Le but du projet était d'améliorer la performance du site, de réduire les temps de chargement et d'ajouter un référencement local SEO.",
        "ninaCarducciLighthouseBase": "Les résultats de l'audit Lighthouse n'étaient pas très bons, que ce soit en termes de Performance, Accessibilité ou SEO.\n Pour améliorer cela, j'ai optimisé les images, auxquelles j'ai ajouté un chargement paresseux. J'ai minifié les fichiers javascript existants, ces modifications ont considérablement augmenté la performance du site. J'ai réorganisé la structure HTML et ajouté également la balise meta pour les réseaux sociaux",
        "ninaCarducciLighthouseOpti": "Après ces améliorations, vous pouvez voir sur l'audit Lighthouse, l'énorme écart entre avant et après l'optimisation. Que ce soit sur l'audit mobile ou de bureau.",
        "ninaCarducciKeywords": "Pour le SEO, j'ai également ajouté quelques mots-clés cachés dans différents textes.",
        "ninaCarducciMeta": "Résultat des meta pour le SEO Facebook.",
        "ninaCarducciSnippet": "Résultat du Rich Snippet Google, montrant les informations sur le référencement local SEO.",
        "ninaCarducciWave": "Résultat Wave, montrant aucune erreur concernant l'accessibilité du site.",

        "77eventsGallery": "L'objectif ici était de déboguer le site web. Le carrousel ne fonctionnait pas correctement, une image blanche était affichée, pour changer la diapositive en cours, les boutons radio n'étaient pas utilisables et les images devaient être affichées de la plus ancienne à la plus récente. Dans la liste des événements, certains n'affichent aucune date et d'autres n'affichent pas les bonnes, les filtres ne fonctionnaient pas non plus.",
        "77eventsContactForm": "Concernant le formulaire de contact, aucun message de confirmation n'était affiché.",
        "77eventsFooter": "Pour finir, l'image dans le pied de page était censée afficher le dernier événement, avec la date et la catégorie.",
        "77eventsFooterAfter": "Pour accomplir la tâche, j'ai utilisé le test unitaire pour vérifier chaque composant du site web, en parallèle j'ai écrit un livre de test qui inclut des scénarios, me permettant de vérifier le bon fonctionnement des composants ciblés.",

        "argentbankLogin": "J'ai dû créer le tableau de bord de l'utilisateur en utilisant React et Redux pour gérer l'état.",
        "argentbankAccount": "Avec un modèle qui m'a été donné, j'ai dû recréer le HTML statique en React. J'ai commencé par créer la page d'accueil avec des composants réutilisables pour la section des 'fonctionnalités'. Après cela, j'ai créé le système de connexion, et j'ai également géré la déconnexion.",
        "argentbankForm": "Pour finir, dans la page de profil de l'utilisateur, j'ai ajouté un formulaire qui permet à l'utilisateur de changer uniquement son nom d'utilisateur.",
        "argentbankStore": "Toutes les actions de l'utilisateur sont gérées avec le Redux Store comme vous pouvez le voir ici.",
        "argentbankStoreAfter": "Pour la phase 2 du projet, j'ai dû proposer des endpoints sous forme de swagger, chaque endpoints devait avoir : la méthode HTTP, la route, la description de ce à quoi correspond le endpoints et les différentes réponses avec le code de réponse correspondant.",
        
        "contactFormName": "Votre Nom",
        "contactFormSubmit": "Envoyer",
        "contactFormSuccess": "Le message a été envoyé avec succès !"
}